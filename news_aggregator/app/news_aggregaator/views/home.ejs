<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NewsHub - Your News Aggregator</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #5568bb 0%, #a987ca 100%);
            min-height: 100vh;
            line-height: 1.6;
        }

        /* Enhanced Navbar Styles */
        .navbar {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            padding: 1rem 2rem;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 1000;
            transition: all 0.3s ease;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .navbar.scrolled {
            background: rgba(255, 255, 255, 0.98);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);
        }

        .nav-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1200px;
            margin: 0 auto;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 1.5rem;
            font-weight: 700;
            color: #667eea;
            text-decoration: none;
            transition: transform 0.3s ease;
        }

        .logo:hover {
            transform: scale(1.05);
        }

        .logo i {
            font-size: 2rem;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .nav-links {
            display: flex;
            list-style: none;
            gap: 2rem;
            align-items: center;
        }

        .nav-item {
            position: relative;
        }

        .nav-link {
            text-decoration: none;
            color: #4a5568;
            font-weight: 500;
            padding: 0.75rem 1.5rem;
            border-radius: 25px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .nav-link::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, #667eea, #764ba2);
            transition: left 0.3s ease;
            z-index: -1;
        }

        .nav-link:hover::before {
            left: 0;
        }

        .nav-link:hover {
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        }

        .nav-link i {
            font-size: 1.1rem;
        }

        .mobile-menu-btn {
            display: none;
            background: none;
            border: none;
            font-size: 1.5rem;
            color: #4a5568;
            cursor: pointer;
            padding: 0.5rem;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .mobile-menu-btn:hover {
            background: rgba(102, 126, 234, 0.1);
            color: #667eea;
        }

        .dropdown {
            position: relative;
        }

        .profile-btn {
            background: linear-gradient(135deg, #667eea, #764ba2);
            border: none;
            padding: 0.75rem;
            border-radius: 50%;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 45px;
            height: 45px;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
            position: relative;
        }

        .profile-btn:hover {
            transform: scale(1.1);
            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
        }

        .profile-btn i {
            color: white;
            font-size: 1.2rem;
        }

        .dropdown-menu {
            position: absolute;
            top: calc(100% + 10px);
            right: 0;
            background: white;
            border-radius: 15px;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);
            min-width: 200px;
            opacity: 0;
            visibility: hidden;
            transform: translateY(-10px);
            transition: all 0.3s ease;
            overflow: hidden;
        }

        .dropdown-menu.active {
            opacity: 1;
            visibility: visible;
            transform: translateY(0);
        }

        .dropdown-item {
            display: block;
            padding: 1rem 1.5rem;
            color: #4a5568;
            text-decoration: none;
            transition: all 0.3s ease;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .dropdown-item:last-child {
            border-bottom: none;
        }

        .dropdown-item:hover {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
        }

        .dropdown-item i {
            font-size: 1.1rem;
        }

        .notification-badge {
            position: absolute;
            top: -5px;
            right: -5px;
            background: #ff4757;
            color: white;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            font-size: 0.75rem;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); }
            100% { transform: scale(1); }
        }

        /* Main Content */
        .main-content {
            margin-top: 100px;
            padding: 2rem;
            max-width: 1200px;
            margin-left: auto;
            margin-right: auto;
        }

        .page-header {
            text-align: center;
            margin-bottom: 3rem;
            color: white;
        }

        .page-header h1 {
            font-size: 3rem;
            font-weight: 700;
            margin-bottom: 1rem;
            text-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
        }

        .page-header p {
            font-size: 1.2rem;
            opacity: 0.9;
            max-width: 600px;
            margin: 0 auto;
        }

        .filter-section {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .filter-controls {
            display: flex;
            gap: 1rem;
            align-items: center;
            flex-wrap: wrap;
            justify-content: space-between;
        }

        .search-box {
            flex: 1;
            min-width: 300px;
            position: relative;
        }

        .search-input {
            width: 100%;
            padding: 0.75rem 1rem 0.75rem 3rem;
            border: 2px solid #e2e8f0;
            border-radius: 25px;
            font-size: 1rem;
            outline: none;
            transition: all 0.3s ease;
        }

        .search-input:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .search-icon {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: #667eea;
        }

        .sort-controls {
            display: flex;
            gap: 1rem;
            align-items: center;
        }

        .sort-btn {
            padding: 0.75rem 1.5rem;
            border: 2px solid #e2e8f0;
            background: white;
            border-radius: 25px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .sort-btn.active, .sort-btn:hover {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border-color: transparent;
        }

        /* Posts Container */
        .posts-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
            gap: 2rem;
            margin-top: 2rem;
        }

        .post-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .post-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(135deg, #667eea, #764ba2);
        }

        .post-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
        }

        .post-header {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .author-avatar {
            width: 45px;
            height: 45px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea, #764ba2);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 1.2rem;
        }

        .author-info {
            flex: 1;
        }

        .author-name {
            background: none;
            border: none;
            font-weight: 600;
            color: #667eea;
            cursor: pointer;
            font-size: 1rem;
            padding: 0;
            text-align: left;
            transition: color 0.3s ease;
        }

        .author-name:hover {
            color: #764ba2;
        }

        .post-time {
            font-size: 0.875rem;
            color: #718096;
        }

        .post-title {
            background: none;
            border: none;
            font-size: 1.25rem;
            font-weight: 600;
            color: #2d3748;
            cursor: pointer;
            text-align: left;
            width: 100%;
            padding: 0;
            margin-bottom: 1.5rem;
            line-height: 1.4;
            transition: color 0.3s ease;
        }

        .post-title:hover {
            color: #667eea;
        }

        .post-actions {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding-top: 1rem;
            border-top: 1px solid #e2e8f0;
        }

        .reaction-group {
            display: flex;
            gap: 1.5rem;
        }

        .reaction-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            cursor: pointer;
            padding: 0.5rem;
            border-radius: 10px;
            transition: all 0.3s ease;
        }

        .reaction-item:hover {
            background: rgba(102, 126, 234, 0.1);
        }

        .reaction-icon {
            width: 20px;
            height: 20px;
            transition: transform 0.3s ease;
        }

        .reaction-item:hover .reaction-icon {
            transform: scale(1.2);
        }

        .reaction-count {
            font-weight: 500;
            color: #4a5568;
            margin: 0;
        }

        .upvote-icon {
            color: #48bb78;
        }

        .downvote-icon {
            color: #f56565;
        }

        .comment-icon {
            color: #667eea;
        }

        /* Loading State */
        .loading-container {
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 4rem;
            color: white;
        }

        .loading-spinner {
            width: 40px;
            height: 40px;
            border: 3px solid rgba(255, 255, 255, 0.3);
            border-top: 3px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-right: 1rem;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
            color: white;
        }

        .empty-state i {
            font-size: 4rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }

        .empty-state h3 {
            font-size: 1.5rem;
            margin-bottom: 0.5rem;
        }

        .empty-state p {
            opacity: 0.8;
        }

        /* Mobile Responsive */
        @media (max-width: 768px) {
            .navbar {
                padding: 1rem;
            }

            .mobile-menu-btn {
                display: block;
            }

            .nav-links {
                position: fixed;
                top: 80px;
                left: 0;
                right: 0;
                background: rgba(255, 255, 255, 0.98);
                backdrop-filter: blur(20px);
                flex-direction: column;
                padding: 2rem 1rem;
                gap: 1rem;
                transform: translateY(-100vh);
                transition: transform 0.3s ease;
                box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            }

            .nav-links.active {
                transform: translateY(0);
            }

            .nav-link {
                width: 100%;
                justify-content: center;
                padding: 1rem;
                font-size: 1.1rem;
            }

            .dropdown-menu {
                right: auto;
                left: 50%;
                transform: translateX(-50%) translateY(-10px);
            }

            .dropdown-menu.active {
                transform: translateX(-50%) translateY(0);
            }

            .main-content {
                padding: 1rem;
                margin-top: 80px;
            }

            .page-header h1 {
                font-size: 2rem;
            }

            .posts-container {
                grid-template-columns: 1fr;
                gap: 1.5rem;
            }

            .filter-controls {
                flex-direction: column;
                align-items: stretch;
            }

            .search-box {
                min-width: auto;
            }

            .sort-controls {
                flex-wrap: wrap;
            }
        }

        @media (max-width: 480px) {
            .logo {
                font-size: 1.2rem;
            }

            .logo i {
                font-size: 1.5rem;
            }

            .post-card {
                padding: 1.5rem;
            }

            .reaction-group {
                gap: 1rem;
            }

            .post-title {
                font-size: 1.1rem;
            }
        }
    </style>
</head>
<body>
    <!-- Enhanced Navbar -->
    <nav class="navbar" id="navbar">
        <div class="nav-container">
            <a href="/home" class="logo">
                <i class="fas fa-newspaper"></i>
                NewsHub
            </a>

            <ul class="nav-links" id="navLinks">
                <li class="nav-item">
                    <a href="/home" class="nav-link">
                        <i class="fas fa-home"></i>
                        Home
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/search" class="nav-link">
                        <i class="fas fa-search"></i>
                        Search
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/createpost" class="nav-link">
                        <i class="fas fa-plus-circle"></i>
                        Create Post
                    </a>
                </li>
            </ul>

            <div class="nav-actions">
                <div class="dropdown">
                    <button class="profile-btn" id="profileBtn">
                        <i class="fas fa-user"></i>
                        <span class="notification-badge" id="notificationBadge">3</span>
                    </button>
                    <div class="dropdown-menu" id="dropdownMenu">
                        <a href="/user/notifications" class="dropdown-item">
                            <i class="fas fa-bell"></i>
                            Notifications
                        </a>
                        <a href="/profile" class="dropdown-item">
                            <i class="fas fa-user-circle"></i>
                            Profile
                        </a>
                        <a href="/user/settings" class="dropdown-item">
                            <i class="fas fa-cog"></i>
                            Settings
                        </a>
                        <a href="/user/logout" class="dropdown-item">
                            <i class="fas fa-sign-out-alt"></i>
                            Logout
                        </a>
                    </div>
                </div>

                <button class="mobile-menu-btn" id="mobileMenuBtn">
                    <i class="fas fa-bars"></i>
                </button>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="main-content">
        <!-- Page Header -->
        <div class="page-header">
            <h1>Latest News & Stories</h1>
            <p>Discover trending stories and engaging discussions from our community</p>
        </div>

        <!-- Filter Section -->
        <div class="filter-section">
            <div class="filter-controls">
                <div class="search-box">
                    <i class="fas fa-search search-icon"></i>
                    <input type="text" class="search-input" placeholder="Search posts, authors, or topics..." id="searchInput">
                </div>
                <div class="sort-controls">
                    <button class="sort-btn active" data-sort="latest">
                        <i class="fas fa-clock"></i>
                        Latest
                    </button>
                    <button class="sort-btn" data-sort="popular">
                        <i class="fas fa-fire"></i>
                        Popular
                    </button>
                    <button class="sort-btn" data-sort="trending">
                        <i class="fas fa-chart-line"></i>
                        Trending
                    </button>
                </div>
            </div>
        </div>

        <!-- Posts Container -->
        <div class="posts-container" id="postsContainer">
            <!-- Loading state -->
            <div class="loading-container" id="loadingState">
                <div class="loading-spinner"></div>
                <span>Loading amazing content...</span>
            </div>
        </div>
    </div>

    <script>
        // Enhanced Navbar functionality
        window.addEventListener('scroll', () => {
            const navbar = document.getElementById('navbar');
            if (window.scrollY > 50) {
                navbar.classList.add('scrolled');
            } else {
                navbar.classList.remove('scrolled');
            }
        });

        // Mobile menu toggle
        const mobileMenuBtn = document.getElementById('mobileMenuBtn');
        const navLinks = document.getElementById('navLinks');
        const menuIcon = mobileMenuBtn.querySelector('i');

        mobileMenuBtn.addEventListener('click', () => {
            navLinks.classList.toggle('active');
            if (navLinks.classList.contains('active')) {
                menuIcon.classList.remove('fa-bars');
                menuIcon.classList.add('fa-times');
            } else {
                menuIcon.classList.remove('fa-times');
                menuIcon.classList.add('fa-bars');
            }
        });

        // Profile dropdown toggle
        const profileBtn = document.getElementById('profileBtn');
        const dropdownMenu = document.getElementById('dropdownMenu');

        profileBtn.addEventListener('click', (e) => {
            e.stopPropagation();
            dropdownMenu.classList.toggle('active');
        });

        // Close dropdown when clicking outside
        document.addEventListener('click', (e) => {
            if (!e.target.closest('.dropdown')) {
                dropdownMenu.classList.remove('active');
            }
        });

        // Close mobile menu when clicking on nav links
        const navLinksItems = document.querySelectorAll('.nav-link');
        navLinksItems.forEach(link => {
            link.addEventListener('click', () => {
                navLinks.classList.remove('active');
                menuIcon.classList.remove('fa-times');
                menuIcon.classList.add('fa-bars');
            });
        });
        
        class NewsHomepage {
            constructor() {
                this.posts = [];
                this.filteredPosts = [];
                this.currentSort = 'latest';
                this.searchTerm = '';
                this.init();
            }

            init() {
                this.setupEventListeners();
                this.fetchPosts();
            }

            setupEventListeners() {
                // Search functionality
                const searchInput = document.getElementById('searchInput');
                searchInput.addEventListener('input', (e) => {
                    this.searchTerm = e.target.value.toLowerCase();
                    this.filterAndRenderPosts();
                });

                // Sort functionality
                const sortButtons = document.querySelectorAll('.sort-btn');
                sortButtons.forEach(btn => {
                    btn.addEventListener('click', (e) => {
                        sortButtons.forEach(b => b.classList.remove('active'));
                        e.target.classList.add('active');
                        this.currentSort = e.target.dataset.sort;
                        this.filterAndRenderPosts();
                    });
                });
            }

            async fetchPosts() {
                try {
                    const baseurl = window.location.origin;
                    const response = await fetch(`${baseurl}/home/posts/`);
                    const data = await response.json();
                    
                    this.posts = data.posts || [];
                    this.filteredPosts = [...this.posts];
                    this.hideLoading();
                    this.renderPosts();
                } catch (error) {
                    console.error('Error fetching posts:', error);
                    this.showError();
                }
            }

            filterAndRenderPosts() {
                // Filter by search term
                this.filteredPosts = this.posts.filter(post => {
                    const searchableText = `${post.title} ${post.user?.name || ''}`.toLowerCase();
                    return searchableText.includes(this.searchTerm);
                });

                // Sort posts
                this.sortPosts();
                this.renderPosts();
            }

            sortPosts() {
                switch (this.currentSort) {
                    case 'popular':
                        this.filteredPosts.sort((a, b) => (b.upvote + b.noofreplies) - (a.upvote + a.noofreplies));
                        break;
                    case 'trending':
                        this.filteredPosts.sort((a, b) => (b.upvote - b.downvote) - (a.upvote - a.downvote));
                        break;
                    case 'latest':
                    default:
                        this.filteredPosts.sort((a, b) => new Date(b.createdAt || Date.now()) - new Date(a.createdAt || Date.now()));
                        break;
                }
            }

            renderPosts() {
                const container = document.getElementById('postsContainer');
                
                if (this.filteredPosts.length === 0) {
                    container.innerHTML = `
                        <div class="empty-state">
                            <i class="fas fa-newspaper"></i>
                            <h3>No posts found</h3>
                            <p>Try adjusting your search or check back later for new content!</p>
                        </div>
                    `;
                    return;
                }

                container.innerHTML = this.filteredPosts.map(post => this.createPostCard(post)).join('');
            }

            createPostCard(post) {
                const baseurl = window.location.origin;
                const authorInitial = (post.user?.name || 'U').charAt(0).toUpperCase();
                const timeAgo = this.getTimeAgo(post.createdAt);

                return `
                    <div class="post-card" data-post-id="${post._id}">
                        <div class="post-header">
                            <div class="author-avatar">${authorInitial}</div>
                            <div class="author-info">
                                <button class="author-name" onclick="redirectToUrl('/profile/${post.userid}')">
                                    ${post.user?.name || 'Anonymous'}
                                </button>
                                <div class="post-time">${timeAgo}</div>
                            </div>
                        </div>
                        
                        <button class="post-title" onclick="redirectToUrl('${baseurl}/home/posts/${post._id}')">
                            ${post.title}
                        </button>
                        
                        <div class="post-actions">
                            <div class="reaction-group">
                                <div class="reaction-item" onclick="handleVote('${post._id}', 'upvote')">
                                    <i class="fas fa-arrow-up reaction-icon upvote-icon"></i>
                                    <span class="reaction-count">${post.upvote || 0}</span>
                                </div>
                                <div class="reaction-item" onclick="handleVote('${post._id}', 'downvote')">
                                    <i class="fas fa-arrow-down reaction-icon downvote-icon"></i>
                                    <span class="reaction-count">${post.downvote || 0}</span>
                                </div>
                                <div class="reaction-item" onclick="redirectToUrl('${baseurl}/home/posts/${post._id}#comments')">
                                    <i class="fas fa-comment reaction-icon comment-icon"></i>
                                    <span class="reaction-count">${post.noofreplies || 0}</span>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            }

            getTimeAgo(dateString) {
                if (!dateString) return 'Just now';
                
                const now = new Date();
                const postDate = new Date(dateString);
                const diffInSeconds = Math.floor((now - postDate) / 1000);
                
                if (diffInSeconds < 60) return 'Just now';
                if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}m ago`;
                if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)}h ago`;
                if (diffInSeconds < 2592000) return `${Math.floor(diffInSeconds / 86400)}d ago`;
                
                return postDate.toLocaleDateString();
            }

            hideLoading() {
                const loadingState = document.getElementById('loadingState');
                if (loadingState) {
                    loadingState.style.display = 'none';
                }
            }

            showError() {
                const container = document.getElementById('postsContainer');
                container.innerHTML = `
                    <div class="empty-state">
                        <i class="fas fa-exclamation-triangle"></i>
                        <h3>Oops! Something went wrong</h3>
                        <p>We couldn't load the posts. Please try refreshing the page.</p>
                    </div>
                `;
            }
        }

        // Global functions for backward compatibility
        function redirectToUrl(url) {
            // Add smooth transition effect
            document.body.style.opacity = '0.8';
            setTimeout(() => {
                window.location.href = url;
            }, 150);
        }

        function handleVote(postId, voteType) {
            // Add visual feedback
            const voteElement = event.currentTarget;
            voteElement.style.transform = 'scale(0.95)';
            setTimeout(() => {
                voteElement.style.transform = 'scale(1)';
            }, 150);

            // Here you would typically make an API call to handle the vote
            console.log(`${voteType} for post ${postId}`);
            
            // For demo purposes, just show feedback
            const countElement = voteElement.querySelector('.reaction-count');
            const currentCount = parseInt(countElement.textContent);
            countElement.textContent = currentCount + 1;
            
            // You can add your actual voting logic here
            // fetch(`/posts/${postId}/${voteType}`, { method: 'POST' })...
        }

        // Initialize the homepage
        document.addEventListener('DOMContentLoaded', () => {
            new NewsHomepage();
        });

        // Add smooth scroll behavior
        document.documentElement.style.scrollBehavior = 'smooth';

        // Add intersection observer for animations
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateY(0)';
                }
            });
        }, observerOptions);

        // Observe post cards for scroll animations
        setTimeout(() => {
            document.querySelectorAll('.post-card').forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(30px)'; 
                card.style.transition = `all 0.6s ease ${index * 0.1}s`;
                observer.observe(card);
            });
        }, 100);
    </script>
</body>
</html>